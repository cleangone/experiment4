{"remainingRequest":"/home/ec2-user/environment/cleangone4/node_modules/babel-loader/lib/index.js!/home/ec2-user/environment/cleangone4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/ec2-user/environment/cleangone4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ec2-user/environment/cleangone4/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ec2-user/environment/cleangone4/src/App.vue","mtime":1584568765907},{"path":"/home/ec2-user/environment/cleangone4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ec2-user/environment/cleangone4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ec2-user/environment/cleangone4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ec2-user/environment/cleangone4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9lYzItdXNlci9lbnZpcm9ubWVudC9jbGVhbmdvbmU0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFZvdGVDaGFydCBmcm9tICIuL2NvbXBvbmVudHMvVm90ZUNoYXJ0IjsKaW1wb3J0IHsgQVBJLCBncmFwaHFsT3BlcmF0aW9uIH0gZnJvbSAiYXdzLWFtcGxpZnkiOwppbXBvcnQgKiBhcyBxdWVyaWVzIGZyb20gIi4vZ3JhcGhxbC9xdWVyaWVzIjsKaW1wb3J0ICogYXMgbXV0YXRpb25zIGZyb20gIi4vZ3JhcGhxbC9tdXRhdGlvbnMiOwppbXBvcnQgKiBhcyBzdWJzY3JpcHRpb25zIGZyb20gIi4vZ3JhcGhxbC9zdWJzY3JpcHRpb25zIjsKdmFyIGRpc3RpbmN0Q29sb3JzID0gWyJyZWQiLCAib3JhbmdlIiwgImdyZWVuIiwgImJsdWUiXTsKdmFyIGRpc3RpbmN0QmFja2dyb3VuZENvbG9ycyA9IFsiI2U1M2UzZSIsICIjZGQ2YjIwIiwgIiMzOGExNjkiLCAiIzMxODJjZSJdOwp2YXIgY29sb3JzID0gZGlzdGluY3RDb2xvcnMuY29uY2F0KGRpc3RpbmN0Q29sb3JzKTsKdmFyIGJhY2tncm91bmRDb2xvcnMgPSBkaXN0aW5jdEJhY2tncm91bmRDb2xvcnMuY29uY2F0KGRpc3RpbmN0QmFja2dyb3VuZENvbG9ycyk7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBWb3RlQ2hhcnQ6IFZvdGVDaGFydAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNhbmRpZGF0ZXM6IFtdLAogICAgICBjYW5kaWRhdGVDb2xvcnM6IGNvbG9ycwogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjaGFydERhdGE6IGZ1bmN0aW9uIGNoYXJ0RGF0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBsYWJlbHM6IHRoaXMuY2FuZGlkYXRlcy5tYXAoZnVuY3Rpb24gKGNhbmRpZGF0ZSkgewogICAgICAgICAgcmV0dXJuIGNhbmRpZGF0ZS5uYW1lOwogICAgICAgIH0pLAogICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgbGFiZWw6IGZhbHNlLAogICAgICAgICAgZGF0YTogdGhpcy5jYW5kaWRhdGVzLm1hcChmdW5jdGlvbiAoY2FuZGlkYXRlKSB7CiAgICAgICAgICAgIHJldHVybiBjYW5kaWRhdGUudm90ZXM7CiAgICAgICAgICB9KSwKICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogYmFja2dyb3VuZENvbG9ycwogICAgICAgIH1dCiAgICAgIH07CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24ocXVlcmllcy5saXN0VG9kb3MpKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy5jYW5kaWRhdGVzID0gcmVzLmRhdGEubGlzdFRvZG9zLml0ZW1zOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgbWV0aG9kczogewogICAgY3JlYXRlVG9kbzogZnVuY3Rpb24gY3JlYXRlVG9kbyhuYW1lKSB7CiAgICAgIC8vIGFsZXJ0ICgiY3JlYXRpbmcgIiArIG5hbWUpOwogICAgICB2YXIgdG9kbyA9IHsKICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgIHZvdGVzOiAwCiAgICAgIH07CiAgICAgIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24obXV0YXRpb25zLmNyZWF0ZVRvZG8sIHsKICAgICAgICBpbnB1dDogdG9kbwogICAgICB9KSk7CiAgICAgIHRoaXMubmV3VG9kb05hbWUgPSAnJzsKICAgIH0sCiAgICBjYXN0Vm90ZTogZnVuY3Rpb24gY2FzdFZvdGUoaWQpIHsKICAgICAgdmFyIHZvdGVJbnB1dCA9IHsKICAgICAgICBpZDogaWQKICAgICAgfTsKICAgICAgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihtdXRhdGlvbnMuY2FzdFZvdGUsIHsKICAgICAgICBpbnB1dDogdm90ZUlucHV0CiAgICAgIH0pKTsKICAgIH0sCiAgICBkZWxldGVUb2RvOiBmdW5jdGlvbiBkZWxldGVUb2RvKHRvZG8pIHsKICAgICAgLy9hbGVydCAoImRlbGV0ZVRvZG8gIiArIHRvZG8ubmFtZSk7CiAgICAgIHRoaXMuJGRpYWxvZy5jb25maXJtKCJEZWxldGUgIiArIHRvZG8ubmFtZSArICI/IiwgewogICAgICAgIG9rVGV4dDogJ0RlbGV0ZScsCiAgICAgICAgY2FuY2VsVGV4dDogJ0NhbmNlbCcKICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGRlbGV0ZUlucHV0ID0gewogICAgICAgICAgaWQ6IHRvZG8uaWQKICAgICAgICB9OwogICAgICAgIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24obXV0YXRpb25zLmRlbGV0ZVRvZG8sIHsKICAgICAgICAgIGlucHV0OiBkZWxldGVJbnB1dAogICAgICAgIH0pKTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihzdWJzY3JpcHRpb25zLm9uQ2FzdFZvdGUpKS5zdWJzY3JpYmUoewogICAgICBuZXh0OiBmdW5jdGlvbiBuZXh0KHZvdGVDYXN0ZWQpIHsKICAgICAgICB2YXIgaWQgPSB2b3RlQ2FzdGVkLnZhbHVlLmRhdGEub25DYXN0Vm90ZS5pZDsKICAgICAgICB2YXIgdm90ZXMgPSB2b3RlQ2FzdGVkLnZhbHVlLmRhdGEub25DYXN0Vm90ZS52b3RlczsKCiAgICAgICAgdmFyIGNhbmRpZGF0ZSA9IF90aGlzMi5jYW5kaWRhdGVzLmZpbmQoZnVuY3Rpb24gKGNhbmRpZGF0ZSkgewogICAgICAgICAgcmV0dXJuIGNhbmRpZGF0ZS5pZCA9PT0gaWQ7CiAgICAgICAgfSk7CgogICAgICAgIGNhbmRpZGF0ZS52b3RlcyA9IHZvdGVzOwogICAgICB9CiAgICB9KTsKICAgIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24oc3Vic2NyaXB0aW9ucy5vbkNyZWF0ZVRvZG8pKS5zdWJzY3JpYmUoewogICAgICBuZXh0OiBmdW5jdGlvbiBuZXh0KGNyZWF0ZWRUb2RvKSB7CiAgICAgICAgLy9hbGVydCAoInN1YnNjcmlwdGlvbnMub25DcmVhdGVUb2RvOiAiICsgY3JlYXRlZFRvZG8udmFsdWUuZGF0YS5vbkNyZWF0ZVRvZG8ubmFtZSk7CiAgICAgICAgX3RoaXMyLmNhbmRpZGF0ZXMucHVzaChjcmVhdGVkVG9kby52YWx1ZS5kYXRhLm9uQ3JlYXRlVG9kbyk7CiAgICAgIH0KICAgIH0pOwogICAgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihzdWJzY3JpcHRpb25zLm9uRGVsZXRlVG9kbykpLnN1YnNjcmliZSh7CiAgICAgIG5leHQ6IGZ1bmN0aW9uIG5leHQoZGVsZXRlZFRvZG8pIHsKICAgICAgICAvL2FsZXJ0ICgic3Vic2NyaXB0aW9ucy5vbkRlbGV0ZVRvZG86ICIgKyBkZWxldGVkVG9kby52YWx1ZS5kYXRhLm9uRGVsZXRlVG9kby5uYW1lKTsKICAgICAgICB2YXIgaWQgPSBkZWxldGVkVG9kby52YWx1ZS5kYXRhLm9uRGVsZXRlVG9kby5pZDsKICAgICAgICBfdGhpczIuY2FuZGlkYXRlcyA9IF90aGlzMi5jYW5kaWRhdGVzLmZpbHRlcihmdW5jdGlvbiAoY2FuZGlkYXRlKSB7CiAgICAgICAgICByZXR1cm4gY2FuZGlkYXRlLmlkICE9PSBpZDsKICAgICAgICB9KTsKICAgICAgfQogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"text-gray-800 md:text-lg italic font-light\">Important ToDo's</div>\n\n    <div>\n      <!--todo - add border-->\n      <input v-model=\"newTodoName\" placeholder=\"New ToDo\">\n      \n      <!--todo - make look like button-->\n      <button @click=\"createTodo(newTodoName)\">Add</button>\n    </div>\n    \n\n    <div class=\"mx-auto flex mt-4\">\n      <button v-for=\"(candidate, index) in candidates\" v-bind:key=\"candidate.id\" @click=\"castVote(candidate.id)\"\n        v-bind:class=\"`focus:outline-none flex-1 h-max text-white text-sm sm:text-lg font-semibold py-2 px-2 mx-1 md:h-18 h-18 rounded bg-${candidateColors[index]}-600 hover:bg-${candidateColors[index]}-800`\">\n        {{candidate.name}}<p>{{candidate.votes}}</p>\n      </button>\n    </div>\n    <h1 class=\"text-gray-800 font-bold mt-8 mb-3\">Live updates</h1>\n    <VoteChart v-bind:chartData=\"chartData\" width=\"200\" height=\"110\"></VoteChart>\n    \n    <div class=\"mx-auto flex mt-4\">\n      <button v-for=\"(candidate, index) in candidates\" v-bind:key=\"candidate.id\" @click=\"deleteTodo(candidate)\"\n        v-bind:class=\"`focus:outline-none flex-1 h-max text-white text-sm sm:text-lg font-semibold py-2 px-2 mx-1 md:h-18 h-18 rounded bg-${candidateColors[index]}-600 hover:bg-black`\">\n        <p>Delete</p>{{candidate.name}}\n      </button>\n    </div>\n \n  </div>\n</template>\n\n<script>\nimport VoteChart from \"./components/VoteChart\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"./graphql/queries\";\nimport * as mutations from \"./graphql/mutations\";\nimport * as subscriptions from \"./graphql/subscriptions\";\n\nconst distinctColors = [\"red\", \"orange\", \"green\", \"blue\"]\nconst distinctBackgroundColors = [\"#e53e3e\", \"#dd6b20\", \"#38a169\", \"#3182ce\"]\nconst colors = distinctColors.concat(distinctColors)\nconst backgroundColors = distinctBackgroundColors.concat(distinctBackgroundColors)\n\nexport default {\n  components: { VoteChart },\n  data() {\n    return {\n      candidates: [],\n      candidateColors: colors\n    };\n  },\n  computed: {\n    chartData: function() {\n      return {\n        labels: this.candidates.map(candidate => candidate.name),\n        datasets: [{\n            label: false,\n            data: this.candidates.map(candidate => candidate.votes),\n            backgroundColor: backgroundColors\n          }]};\n    }\n  },\n  async created() {\n    await API.graphql(graphqlOperation(queries.listTodos)).then(\n      res => (this.candidates = res.data.listTodos.items)\n    );\n  },\n  methods: {\n   createTodo(name) {\n      // alert (\"creating \" + name);\n      const todo = {name:name, votes:0};\n      API.graphql(graphqlOperation(mutations.createTodo, { input: todo }));\n      this.newTodoName = '';\n    },\n    castVote(id) {\n      const voteInput = { id: id };\n      API.graphql(graphqlOperation(mutations.castVote, { input: voteInput }));\n    },\n    deleteTodo(todo) {\n      //alert (\"deleteTodo \" + todo.name);\n      this.$dialog.confirm(\"Delete \" + todo.name + \"?\", { okText:'Delete', cancelText:'Cancel' })\n        .then(function() {\n          const deleteInput = { id: todo.id };\n          API.graphql(graphqlOperation(mutations.deleteTodo, { input: deleteInput }));\n        });\n    }\n  },\n  mounted() {\n    API.graphql(graphqlOperation(subscriptions.onCastVote)).subscribe({\n      next: voteCasted => {\n        const id = voteCasted.value.data.onCastVote.id;\n        const votes = voteCasted.value.data.onCastVote.votes;\n        const candidate = this.candidates.find(candidate => candidate.id === id);\n        candidate.votes = votes;\n      }\n    });\n    API.graphql(graphqlOperation(subscriptions.onCreateTodo)).subscribe({\n      next: createdTodo => {\n        //alert (\"subscriptions.onCreateTodo: \" + createdTodo.value.data.onCreateTodo.name);\n        this.candidates.push(createdTodo.value.data.onCreateTodo);\n      } \n    });\n    API.graphql(graphqlOperation(subscriptions.onDeleteTodo)).subscribe({\n      next: deletedTodo => {\n        //alert (\"subscriptions.onDeleteTodo: \" + deletedTodo.value.data.onDeleteTodo.name);\n        const id = deletedTodo.value.data.onDeleteTodo.id;\n        this.candidates = this.candidates.filter(candidate => candidate.id !== id )\n      } \n    });\n  }\n};\n</script>"],"sourceRoot":"src"}]}