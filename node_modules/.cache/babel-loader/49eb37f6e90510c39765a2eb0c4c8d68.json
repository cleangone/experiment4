{"remainingRequest":"/home/ec2-user/environment/cleangone4/node_modules/babel-loader/lib/index.js!/home/ec2-user/environment/cleangone4/node_modules/eslint-loader/index.js??ref--13-0!/home/ec2-user/environment/cleangone4/src/graphql/mutations.js","dependencies":[{"path":"/home/ec2-user/environment/cleangone4/src/graphql/mutations.js","mtime":1584502653217},{"path":"/home/ec2-user/environment/cleangone4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ec2-user/environment/cleangone4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ec2-user/environment/cleangone4/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyogZXNsaW50LWRpc2FibGUgKi8KLy8gdGhpcyBpcyBhbiBhdXRvIGdlbmVyYXRlZCBmaWxlLiBUaGlzIHdpbGwgYmUgb3ZlcndyaXR0ZW4KZXhwb3J0IHZhciBjYXN0Vm90ZSA9Ci8qIEdyYXBoUUwgKi8KIlxuICBtdXRhdGlvbiBDYXN0Vm90ZSgkaW5wdXQ6IENhc3RWb3RlSW5wdXQhKSB7XG4gICAgY2FzdFZvdGUoaW5wdXQ6ICRpbnB1dCkge1xuICAgICAgaWRcbiAgICAgIG5hbWVcbiAgICAgIGRlc2NyaXB0aW9uXG4gICAgICB2b3Rlc1xuICAgIH1cbiAgfVxuIjsKZXhwb3J0IHZhciBjcmVhdGVUb2RvID0KLyogR3JhcGhRTCAqLwoiXG4gIG11dGF0aW9uIENyZWF0ZVRvZG8oXG4gICAgJGlucHV0OiBDcmVhdGVUb2RvSW5wdXQhXG4gICAgJGNvbmRpdGlvbjogTW9kZWxUb2RvQ29uZGl0aW9uSW5wdXRcbiAgKSB7XG4gICAgY3JlYXRlVG9kbyhpbnB1dDogJGlucHV0LCBjb25kaXRpb246ICRjb25kaXRpb24pIHtcbiAgICAgIGlkXG4gICAgICBuYW1lXG4gICAgICBkZXNjcmlwdGlvblxuICAgICAgdm90ZXNcbiAgICB9XG4gIH1cbiI7CmV4cG9ydCB2YXIgdXBkYXRlVG9kbyA9Ci8qIEdyYXBoUUwgKi8KIlxuICBtdXRhdGlvbiBVcGRhdGVUb2RvKFxuICAgICRpbnB1dDogVXBkYXRlVG9kb0lucHV0IVxuICAgICRjb25kaXRpb246IE1vZGVsVG9kb0NvbmRpdGlvbklucHV0XG4gICkge1xuICAgIHVwZGF0ZVRvZG8oaW5wdXQ6ICRpbnB1dCwgY29uZGl0aW9uOiAkY29uZGl0aW9uKSB7XG4gICAgICBpZFxuICAgICAgbmFtZVxuICAgICAgZGVzY3JpcHRpb25cbiAgICAgIHZvdGVzXG4gICAgfVxuICB9XG4iOwpleHBvcnQgdmFyIGRlbGV0ZVRvZG8gPQovKiBHcmFwaFFMICovCiJcbiAgbXV0YXRpb24gRGVsZXRlVG9kbyhcbiAgICAkaW5wdXQ6IERlbGV0ZVRvZG9JbnB1dCFcbiAgICAkY29uZGl0aW9uOiBNb2RlbFRvZG9Db25kaXRpb25JbnB1dFxuICApIHtcbiAgICBkZWxldGVUb2RvKGlucHV0OiAkaW5wdXQsIGNvbmRpdGlvbjogJGNvbmRpdGlvbikge1xuICAgICAgaWRcbiAgICAgIG5hbWVcbiAgICAgIGRlc2NyaXB0aW9uXG4gICAgICB2b3Rlc1xuICAgIH1cbiAgfVxuIjs="},{"version":3,"sources":["/home/ec2-user/environment/cleangone4/src/graphql/mutations.js"],"names":["castVote","createTodo","updateTodo","deleteTodo"],"mappings":"AAAA;AACA;AAEA,OAAO,IAAMA,QAAQ;AAAG;AAAH,oJAAd;AAUP,OAAO,IAAMC,UAAU;AAAG;AAAH,oOAAhB;AAaP,OAAO,IAAMC,UAAU;AAAG;AAAH,oOAAhB;AAaP,OAAO,IAAMC,UAAU;AAAG;AAAH,oOAAhB","sourcesContent":["/* eslint-disable */\n// this is an auto generated file. This will be overwritten\n\nexport const castVote = /* GraphQL */ `\n  mutation CastVote($input: CastVoteInput!) {\n    castVote(input: $input) {\n      id\n      name\n      description\n      votes\n    }\n  }\n`;\nexport const createTodo = /* GraphQL */ `\n  mutation CreateTodo(\n    $input: CreateTodoInput!\n    $condition: ModelTodoConditionInput\n  ) {\n    createTodo(input: $input, condition: $condition) {\n      id\n      name\n      description\n      votes\n    }\n  }\n`;\nexport const updateTodo = /* GraphQL */ `\n  mutation UpdateTodo(\n    $input: UpdateTodoInput!\n    $condition: ModelTodoConditionInput\n  ) {\n    updateTodo(input: $input, condition: $condition) {\n      id\n      name\n      description\n      votes\n    }\n  }\n`;\nexport const deleteTodo = /* GraphQL */ `\n  mutation DeleteTodo(\n    $input: DeleteTodoInput!\n    $condition: ModelTodoConditionInput\n  ) {\n    deleteTodo(input: $input, condition: $condition) {\n      id\n      name\n      description\n      votes\n    }\n  }\n`;\n"]}]}