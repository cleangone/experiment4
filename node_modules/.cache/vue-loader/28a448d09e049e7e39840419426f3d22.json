{"remainingRequest":"/home/ec2-user/environment/cleangone4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ec2-user/environment/cleangone4/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ec2-user/environment/cleangone4/src/App.vue","mtime":1584568765907},{"path":"/home/ec2-user/environment/cleangone4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ec2-user/environment/cleangone4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ec2-user/environment/cleangone4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ec2-user/environment/cleangone4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWb3RlQ2hhcnQgZnJvbSAiLi9jb21wb25lbnRzL1ZvdGVDaGFydCI7CmltcG9ydCB7IEFQSSwgZ3JhcGhxbE9wZXJhdGlvbiB9IGZyb20gImF3cy1hbXBsaWZ5IjsKaW1wb3J0ICogYXMgcXVlcmllcyBmcm9tICIuL2dyYXBocWwvcXVlcmllcyI7CmltcG9ydCAqIGFzIG11dGF0aW9ucyBmcm9tICIuL2dyYXBocWwvbXV0YXRpb25zIjsKaW1wb3J0ICogYXMgc3Vic2NyaXB0aW9ucyBmcm9tICIuL2dyYXBocWwvc3Vic2NyaXB0aW9ucyI7Cgpjb25zdCBkaXN0aW5jdENvbG9ycyA9IFsicmVkIiwgIm9yYW5nZSIsICJncmVlbiIsICJibHVlIl0KY29uc3QgZGlzdGluY3RCYWNrZ3JvdW5kQ29sb3JzID0gWyIjZTUzZTNlIiwgIiNkZDZiMjAiLCAiIzM4YTE2OSIsICIjMzE4MmNlIl0KY29uc3QgY29sb3JzID0gZGlzdGluY3RDb2xvcnMuY29uY2F0KGRpc3RpbmN0Q29sb3JzKQpjb25zdCBiYWNrZ3JvdW5kQ29sb3JzID0gZGlzdGluY3RCYWNrZ3JvdW5kQ29sb3JzLmNvbmNhdChkaXN0aW5jdEJhY2tncm91bmRDb2xvcnMpCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogeyBWb3RlQ2hhcnQgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2FuZGlkYXRlczogW10sCiAgICAgIGNhbmRpZGF0ZUNvbG9yczogY29sb3JzCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNoYXJ0RGF0YTogZnVuY3Rpb24oKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgbGFiZWxzOiB0aGlzLmNhbmRpZGF0ZXMubWFwKGNhbmRpZGF0ZSA9PiBjYW5kaWRhdGUubmFtZSksCiAgICAgICAgZGF0YXNldHM6IFt7CiAgICAgICAgICAgIGxhYmVsOiBmYWxzZSwKICAgICAgICAgICAgZGF0YTogdGhpcy5jYW5kaWRhdGVzLm1hcChjYW5kaWRhdGUgPT4gY2FuZGlkYXRlLnZvdGVzKSwKICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBiYWNrZ3JvdW5kQ29sb3JzCiAgICAgICAgICB9XX07CiAgICB9CiAgfSwKICBhc3luYyBjcmVhdGVkKCkgewogICAgYXdhaXQgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihxdWVyaWVzLmxpc3RUb2RvcykpLnRoZW4oCiAgICAgIHJlcyA9PiAodGhpcy5jYW5kaWRhdGVzID0gcmVzLmRhdGEubGlzdFRvZG9zLml0ZW1zKQogICAgKTsKICB9LAogIG1ldGhvZHM6IHsKICAgY3JlYXRlVG9kbyhuYW1lKSB7CiAgICAgIC8vIGFsZXJ0ICgiY3JlYXRpbmcgIiArIG5hbWUpOwogICAgICBjb25zdCB0b2RvID0ge25hbWU6bmFtZSwgdm90ZXM6MH07CiAgICAgIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24obXV0YXRpb25zLmNyZWF0ZVRvZG8sIHsgaW5wdXQ6IHRvZG8gfSkpOwogICAgICB0aGlzLm5ld1RvZG9OYW1lID0gJyc7CiAgICB9LAogICAgY2FzdFZvdGUoaWQpIHsKICAgICAgY29uc3Qgdm90ZUlucHV0ID0geyBpZDogaWQgfTsKICAgICAgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihtdXRhdGlvbnMuY2FzdFZvdGUsIHsgaW5wdXQ6IHZvdGVJbnB1dCB9KSk7CiAgICB9LAogICAgZGVsZXRlVG9kbyh0b2RvKSB7CiAgICAgIC8vYWxlcnQgKCJkZWxldGVUb2RvICIgKyB0b2RvLm5hbWUpOwogICAgICB0aGlzLiRkaWFsb2cuY29uZmlybSgiRGVsZXRlICIgKyB0b2RvLm5hbWUgKyAiPyIsIHsgb2tUZXh0OidEZWxldGUnLCBjYW5jZWxUZXh0OidDYW5jZWwnIH0pCiAgICAgICAgLnRoZW4oZnVuY3Rpb24oKSB7CiAgICAgICAgICBjb25zdCBkZWxldGVJbnB1dCA9IHsgaWQ6IHRvZG8uaWQgfTsKICAgICAgICAgIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24obXV0YXRpb25zLmRlbGV0ZVRvZG8sIHsgaW5wdXQ6IGRlbGV0ZUlucHV0IH0pKTsKICAgICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKHN1YnNjcmlwdGlvbnMub25DYXN0Vm90ZSkpLnN1YnNjcmliZSh7CiAgICAgIG5leHQ6IHZvdGVDYXN0ZWQgPT4gewogICAgICAgIGNvbnN0IGlkID0gdm90ZUNhc3RlZC52YWx1ZS5kYXRhLm9uQ2FzdFZvdGUuaWQ7CiAgICAgICAgY29uc3Qgdm90ZXMgPSB2b3RlQ2FzdGVkLnZhbHVlLmRhdGEub25DYXN0Vm90ZS52b3RlczsKICAgICAgICBjb25zdCBjYW5kaWRhdGUgPSB0aGlzLmNhbmRpZGF0ZXMuZmluZChjYW5kaWRhdGUgPT4gY2FuZGlkYXRlLmlkID09PSBpZCk7CiAgICAgICAgY2FuZGlkYXRlLnZvdGVzID0gdm90ZXM7CiAgICAgIH0KICAgIH0pOwogICAgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihzdWJzY3JpcHRpb25zLm9uQ3JlYXRlVG9kbykpLnN1YnNjcmliZSh7CiAgICAgIG5leHQ6IGNyZWF0ZWRUb2RvID0+IHsKICAgICAgICAvL2FsZXJ0ICgic3Vic2NyaXB0aW9ucy5vbkNyZWF0ZVRvZG86ICIgKyBjcmVhdGVkVG9kby52YWx1ZS5kYXRhLm9uQ3JlYXRlVG9kby5uYW1lKTsKICAgICAgICB0aGlzLmNhbmRpZGF0ZXMucHVzaChjcmVhdGVkVG9kby52YWx1ZS5kYXRhLm9uQ3JlYXRlVG9kbyk7CiAgICAgIH0gCiAgICB9KTsKICAgIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24oc3Vic2NyaXB0aW9ucy5vbkRlbGV0ZVRvZG8pKS5zdWJzY3JpYmUoewogICAgICBuZXh0OiBkZWxldGVkVG9kbyA9PiB7CiAgICAgICAgLy9hbGVydCAoInN1YnNjcmlwdGlvbnMub25EZWxldGVUb2RvOiAiICsgZGVsZXRlZFRvZG8udmFsdWUuZGF0YS5vbkRlbGV0ZVRvZG8ubmFtZSk7CiAgICAgICAgY29uc3QgaWQgPSBkZWxldGVkVG9kby52YWx1ZS5kYXRhLm9uRGVsZXRlVG9kby5pZDsKICAgICAgICB0aGlzLmNhbmRpZGF0ZXMgPSB0aGlzLmNhbmRpZGF0ZXMuZmlsdGVyKGNhbmRpZGF0ZSA9PiBjYW5kaWRhdGUuaWQgIT09IGlkICkKICAgICAgfSAKICAgIH0pOwogIH0KfTsK"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"text-gray-800 md:text-lg italic font-light\">Important ToDo's</div>\n\n    <div>\n      <!--todo - add border-->\n      <input v-model=\"newTodoName\" placeholder=\"New ToDo\">\n      \n      <!--todo - make look like button-->\n      <button @click=\"createTodo(newTodoName)\">Add</button>\n    </div>\n    \n\n    <div class=\"mx-auto flex mt-4\">\n      <button v-for=\"(candidate, index) in candidates\" v-bind:key=\"candidate.id\" @click=\"castVote(candidate.id)\"\n        v-bind:class=\"`focus:outline-none flex-1 h-max text-white text-sm sm:text-lg font-semibold py-2 px-2 mx-1 md:h-18 h-18 rounded bg-${candidateColors[index]}-600 hover:bg-${candidateColors[index]}-800`\">\n        {{candidate.name}}<p>{{candidate.votes}}</p>\n      </button>\n    </div>\n    <h1 class=\"text-gray-800 font-bold mt-8 mb-3\">Live updates</h1>\n    <VoteChart v-bind:chartData=\"chartData\" width=\"200\" height=\"110\"></VoteChart>\n    \n    <div class=\"mx-auto flex mt-4\">\n      <button v-for=\"(candidate, index) in candidates\" v-bind:key=\"candidate.id\" @click=\"deleteTodo(candidate)\"\n        v-bind:class=\"`focus:outline-none flex-1 h-max text-white text-sm sm:text-lg font-semibold py-2 px-2 mx-1 md:h-18 h-18 rounded bg-${candidateColors[index]}-600 hover:bg-black`\">\n        <p>Delete</p>{{candidate.name}}\n      </button>\n    </div>\n \n  </div>\n</template>\n\n<script>\nimport VoteChart from \"./components/VoteChart\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"./graphql/queries\";\nimport * as mutations from \"./graphql/mutations\";\nimport * as subscriptions from \"./graphql/subscriptions\";\n\nconst distinctColors = [\"red\", \"orange\", \"green\", \"blue\"]\nconst distinctBackgroundColors = [\"#e53e3e\", \"#dd6b20\", \"#38a169\", \"#3182ce\"]\nconst colors = distinctColors.concat(distinctColors)\nconst backgroundColors = distinctBackgroundColors.concat(distinctBackgroundColors)\n\nexport default {\n  components: { VoteChart },\n  data() {\n    return {\n      candidates: [],\n      candidateColors: colors\n    };\n  },\n  computed: {\n    chartData: function() {\n      return {\n        labels: this.candidates.map(candidate => candidate.name),\n        datasets: [{\n            label: false,\n            data: this.candidates.map(candidate => candidate.votes),\n            backgroundColor: backgroundColors\n          }]};\n    }\n  },\n  async created() {\n    await API.graphql(graphqlOperation(queries.listTodos)).then(\n      res => (this.candidates = res.data.listTodos.items)\n    );\n  },\n  methods: {\n   createTodo(name) {\n      // alert (\"creating \" + name);\n      const todo = {name:name, votes:0};\n      API.graphql(graphqlOperation(mutations.createTodo, { input: todo }));\n      this.newTodoName = '';\n    },\n    castVote(id) {\n      const voteInput = { id: id };\n      API.graphql(graphqlOperation(mutations.castVote, { input: voteInput }));\n    },\n    deleteTodo(todo) {\n      //alert (\"deleteTodo \" + todo.name);\n      this.$dialog.confirm(\"Delete \" + todo.name + \"?\", { okText:'Delete', cancelText:'Cancel' })\n        .then(function() {\n          const deleteInput = { id: todo.id };\n          API.graphql(graphqlOperation(mutations.deleteTodo, { input: deleteInput }));\n        });\n    }\n  },\n  mounted() {\n    API.graphql(graphqlOperation(subscriptions.onCastVote)).subscribe({\n      next: voteCasted => {\n        const id = voteCasted.value.data.onCastVote.id;\n        const votes = voteCasted.value.data.onCastVote.votes;\n        const candidate = this.candidates.find(candidate => candidate.id === id);\n        candidate.votes = votes;\n      }\n    });\n    API.graphql(graphqlOperation(subscriptions.onCreateTodo)).subscribe({\n      next: createdTodo => {\n        //alert (\"subscriptions.onCreateTodo: \" + createdTodo.value.data.onCreateTodo.name);\n        this.candidates.push(createdTodo.value.data.onCreateTodo);\n      } \n    });\n    API.graphql(graphqlOperation(subscriptions.onDeleteTodo)).subscribe({\n      next: deletedTodo => {\n        //alert (\"subscriptions.onDeleteTodo: \" + deletedTodo.value.data.onDeleteTodo.name);\n        const id = deletedTodo.value.data.onDeleteTodo.id;\n        this.candidates = this.candidates.filter(candidate => candidate.id !== id )\n      } \n    });\n  }\n};\n</script>"]}]}