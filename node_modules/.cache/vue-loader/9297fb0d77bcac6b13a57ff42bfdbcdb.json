{"remainingRequest":"/home/ec2-user/environment/cleangone4/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ec2-user/environment/cleangone4/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ec2-user/environment/cleangone4/src/App.vue","mtime":1584558367924},{"path":"/home/ec2-user/environment/cleangone4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ec2-user/environment/cleangone4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ec2-user/environment/cleangone4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ec2-user/environment/cleangone4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWb3RlQ2hhcnQgZnJvbSAiLi9jb21wb25lbnRzL1ZvdGVDaGFydCI7CmltcG9ydCB7IEFQSSwgZ3JhcGhxbE9wZXJhdGlvbiB9IGZyb20gImF3cy1hbXBsaWZ5IjsKaW1wb3J0ICogYXMgcXVlcmllcyBmcm9tICIuL2dyYXBocWwvcXVlcmllcyI7CmltcG9ydCAqIGFzIG11dGF0aW9ucyBmcm9tICIuL2dyYXBocWwvbXV0YXRpb25zIjsKaW1wb3J0ICogYXMgc3Vic2NyaXB0aW9ucyBmcm9tICIuL2dyYXBocWwvc3Vic2NyaXB0aW9ucyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogeyBWb3RlQ2hhcnQgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2FuZGlkYXRlczogW10sCiAgICAgIGNhbmRpZGF0ZUNvbG9yczogWyJyZWQiLCAib3JhbmdlIiwgImdyZWVuIiwgImJsdWUiLCAieWVsbG93IiwgInBpbmsiXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjaGFydERhdGE6IGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4gewogICAgICAgIGxhYmVsczogdGhpcy5jYW5kaWRhdGVzLm1hcChjYW5kaWRhdGUgPT4gY2FuZGlkYXRlLm5hbWUpLAogICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgICBsYWJlbDogZmFsc2UsCiAgICAgICAgICAgIGRhdGE6IHRoaXMuY2FuZGlkYXRlcy5tYXAoY2FuZGlkYXRlID0+IGNhbmRpZGF0ZS52b3RlcyksCiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogWyIjZTUzZTNlIiwgIiNkZDZiMjAiLCAiIzM4YTE2OSIsICIjMzE4MmNlIiwgImJsdWUiLCAiIzMxODJjZSIsICIjMzE4MmNlIl0KICAgICAgICAgIH1dfTsKICAgIH0KICB9LAogIGFzeW5jIGNyZWF0ZWQoKSB7CiAgICBhd2FpdCBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKHF1ZXJpZXMubGlzdFRvZG9zKSkudGhlbigKICAgICAgcmVzID0+ICh0aGlzLmNhbmRpZGF0ZXMgPSByZXMuZGF0YS5saXN0VG9kb3MuaXRlbXMpCiAgICApOwogIH0sCiAgbWV0aG9kczogewogICBjcmVhdGVUb2RvKG5hbWUpIHsKICAgICAgLy8gYWxlcnQgKCJjcmVhdGluZyAiICsgbmFtZSk7CiAgICAgIGNvbnN0IHRvZG8gPSB7bmFtZTpuYW1lLCB2b3RlczowfTsKICAgICAgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihtdXRhdGlvbnMuY3JlYXRlVG9kbywgeyBpbnB1dDogdG9kbyB9KSk7CiAgICAgIHRoaXMubmV3VG9kb05hbWUgPSAnJwogICAgfSwKICAgIGNhc3RWb3RlKGlkKSB7CiAgICAgIGNvbnN0IHZvdGVJbnB1dCA9IHsgaWQ6IGlkIH07CiAgICAgIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24obXV0YXRpb25zLmNhc3RWb3RlLCB7IGlucHV0OiB2b3RlSW5wdXQgfSkpOwogICAgfSwKICAgIGRlbGV0ZVRvZG8oaWQpIHsKICAgICAgY29uc3QgZGVsZXRlSW5wdXQgPSB7IGlkOiBpZCB9OwogICAgICBBUEkuZ3JhcGhxbChncmFwaHFsT3BlcmF0aW9uKG11dGF0aW9ucy5kZWxldGVUb2RvLCB7IGlucHV0OiBkZWxldGVJbnB1dCB9KSk7CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihzdWJzY3JpcHRpb25zLm9uQ2FzdFZvdGUpKS5zdWJzY3JpYmUoewogICAgICBuZXh0OiB2b3RlQ2FzdGVkID0+IHsKICAgICAgICBjb25zdCBpZCA9IHZvdGVDYXN0ZWQudmFsdWUuZGF0YS5vbkNhc3RWb3RlLmlkOwogICAgICAgIGNvbnN0IHZvdGVzID0gdm90ZUNhc3RlZC52YWx1ZS5kYXRhLm9uQ2FzdFZvdGUudm90ZXM7CiAgICAgICAgY29uc3QgY2FuZGlkYXRlcyA9IHRoaXMuY2FuZGlkYXRlczsKICAgICAgICBjb25zdCBjYW5kaWRhdGUgPSBjYW5kaWRhdGVzLmZpbmQoY2FuZGlkYXRlID0+IGNhbmRpZGF0ZS5pZCA9PT0gaWQpOwogICAgICAgIGNhbmRpZGF0ZS52b3RlcyA9IHZvdGVzOwogICAgICAgIHRoaXMuY2FuZGlkYXRlcyA9IGNhbmRpZGF0ZXM7CiAgICAgIH0KICAgIH0pOwogICAgQVBJLmdyYXBocWwoZ3JhcGhxbE9wZXJhdGlvbihzdWJzY3JpcHRpb25zLm9uQ3JlYXRlVG9kbykpLnN1YnNjcmliZSh7CiAgICAgIG5leHQ6IGNyZWF0ZWRUb2RvID0+IHsKICAgICAgICAvL2FsZXJ0ICgic3Vic2NyaXB0aW9ucy5vbkNyZWF0ZVRvZG86ICIgKyBjcmVhdGVkVG9kby52YWx1ZS5kYXRhLm9uQ3JlYXRlVG9kby5uYW1lKTsKICAgICAgICB0aGlzLmNhbmRpZGF0ZXMucHVzaChjcmVhdGVkVG9kby52YWx1ZS5kYXRhLm9uQ3JlYXRlVG9kbyk7CiAgICAgIH0gCiAgICB9KTsKICAgIEFQSS5ncmFwaHFsKGdyYXBocWxPcGVyYXRpb24oc3Vic2NyaXB0aW9ucy5vbkRlbGV0ZVRvZG8pKS5zdWJzY3JpYmUoewogICAgICBuZXh0OiBkZWxldGVkVG9kbyA9PiB7CiAgICAgICAgYWxlcnQgKCJzdWJzY3JpcHRpb25zLm9uRGVsZXRlVG9kbzogIiArIGRlbGV0ZWRUb2RvLnZhbHVlLmRhdGEub25EZWxldGVUb2RvLm5hbWUpOwogICAgICAgIGNvbnN0IGlkID0gZGVsZXRlZFRvZG8udmFsdWUuZGF0YS5vbkRlbGV0ZVRvZG8uaWQ7CiAgICAgICAgdGhpcy5jYW5kaWRhdGVzID0gdGhpcy5jYW5kaWRhdGVzLmZpbHRlcihjYW5kaWRhdGUgPT4gY2FuZGlkYXRlLmlkICE9PSBpZCApCiAgICAgIH0gCiAgICB9KTsKICB9Cn07Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"text-gray-800 md:text-lg italic font-light\">Important ToDo's</div>\n\n    <div>\n      <!--todo - add border-->\n      <input v-model=\"newTodoName\" placeholder=\"New ToDo\">\n      \n      <!--todo - make look like button-->\n      <button @click=\"createTodo(newTodoName)\">Add</button>\n    </div>\n    \n\n    <div class=\"mx-auto flex mt-4\">\n      <button v-for=\"(candidate, index) in candidates\" v-bind:key=\"candidate.id\" @click=\"castVote(candidate.id)\"\n        v-bind:class=\"`focus:outline-none flex-1 h-max text-white text-sm sm:text-lg font-semibold py-2 px-2 mx-1 md:h-18 h-18 rounded bg-${candidateColors[index]}-600 hover:bg-${candidateColors[index]}-800`\">\n        {{candidate.name}}<p>{{candidate.votes}}</p>\n      </button>\n    </div>\n    <h1 class=\"text-gray-800 font-bold mt-8 mb-3\">Live updates</h1>\n    <VoteChart v-bind:chartData=\"chartData\" width=\"200\" height=\"110\"></VoteChart>\n    \n    <div class=\"mx-auto flex mt-4\">\n      <button v-for=\"(candidate, index) in candidates\" v-bind:key=\"candidate.id\" @click=\"deleteTodo(candidate.id)\"\n        v-bind:class=\"`focus:outline-none flex-1 h-max text-white text-sm sm:text-lg font-semibold py-2 px-2 mx-1 md:h-18 h-18 rounded bg-${candidateColors[index]}-600 hover:bg-black`\">\n        Delete {{candidate.name}}\n      </button>\n    </div>\n \n  </div>\n</template>\n\n<script>\nimport VoteChart from \"./components/VoteChart\";\nimport { API, graphqlOperation } from \"aws-amplify\";\nimport * as queries from \"./graphql/queries\";\nimport * as mutations from \"./graphql/mutations\";\nimport * as subscriptions from \"./graphql/subscriptions\";\n\nexport default {\n  components: { VoteChart },\n  data() {\n    return {\n      candidates: [],\n      candidateColors: [\"red\", \"orange\", \"green\", \"blue\", \"yellow\", \"pink\"]\n    };\n  },\n  computed: {\n    chartData: function() {\n      return {\n        labels: this.candidates.map(candidate => candidate.name),\n        datasets: [{\n            label: false,\n            data: this.candidates.map(candidate => candidate.votes),\n            backgroundColor: [\"#e53e3e\", \"#dd6b20\", \"#38a169\", \"#3182ce\", \"blue\", \"#3182ce\", \"#3182ce\"]\n          }]};\n    }\n  },\n  async created() {\n    await API.graphql(graphqlOperation(queries.listTodos)).then(\n      res => (this.candidates = res.data.listTodos.items)\n    );\n  },\n  methods: {\n   createTodo(name) {\n      // alert (\"creating \" + name);\n      const todo = {name:name, votes:0};\n      API.graphql(graphqlOperation(mutations.createTodo, { input: todo }));\n      this.newTodoName = ''\n    },\n    castVote(id) {\n      const voteInput = { id: id };\n      API.graphql(graphqlOperation(mutations.castVote, { input: voteInput }));\n    },\n    deleteTodo(id) {\n      const deleteInput = { id: id };\n      API.graphql(graphqlOperation(mutations.deleteTodo, { input: deleteInput }));\n    }\n  },\n  mounted() {\n    API.graphql(graphqlOperation(subscriptions.onCastVote)).subscribe({\n      next: voteCasted => {\n        const id = voteCasted.value.data.onCastVote.id;\n        const votes = voteCasted.value.data.onCastVote.votes;\n        const candidates = this.candidates;\n        const candidate = candidates.find(candidate => candidate.id === id);\n        candidate.votes = votes;\n        this.candidates = candidates;\n      }\n    });\n    API.graphql(graphqlOperation(subscriptions.onCreateTodo)).subscribe({\n      next: createdTodo => {\n        //alert (\"subscriptions.onCreateTodo: \" + createdTodo.value.data.onCreateTodo.name);\n        this.candidates.push(createdTodo.value.data.onCreateTodo);\n      } \n    });\n    API.graphql(graphqlOperation(subscriptions.onDeleteTodo)).subscribe({\n      next: deletedTodo => {\n        alert (\"subscriptions.onDeleteTodo: \" + deletedTodo.value.data.onDeleteTodo.name);\n        const id = deletedTodo.value.data.onDeleteTodo.id;\n        this.candidates = this.candidates.filter(candidate => candidate.id !== id )\n      } \n    });\n  }\n};\n</script>"]}]}